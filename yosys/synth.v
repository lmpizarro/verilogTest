/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-10 -O2 -fdebug-prefix-map=/build/yosys-kuc41c/yosys-0.7=. -fstack-protector-strong -fPIC -Os) */

(* src = "counter_load16.v:1" *)
module counter_load16(clk, rst, en, data, load, out);
  (* src = "counter_load16.v:9" *)
  wire [15:0] _000_;
  (* src = "counter_load16.v:13" *)
  wire [15:0] _001_;
  wire _002_;
  wire [3:0] _003_;
  wire [1:0] _004_;
  wire [7:0] _005_;
  wire [15:0] _006_;
  wire [15:0] _007_;
  (* src = "<techmap.v>:260|<techmap.v>:203" *)
  wire [15:0] _008_;
  (* src = "counter_load16.v:3" *)
  input clk;
  (* src = "counter_load16.v:5" *)
  wire [15:0] count;
  (* src = "counter_load16.v:6" *)
  input [15:0] data;
  (* src = "counter_load16.v:3" *)
  input en;
  (* src = "counter_load16.v:3" *)
  input load;
  (* src = "counter_load16.v:7" *)
  reg [15:0] mem;
  (* src = "counter_load16.v:4" *)
  output out;
  (* src = "counter_load16.v:3" *)
  input rst;
  assign _005_[2] = _006_[4] |(* src = "counter_load16.v:22" *)  _006_[5];
  assign _005_[3] = _006_[6] |(* src = "counter_load16.v:22" *)  _006_[7];
  assign _005_[4] = _006_[8] |(* src = "counter_load16.v:22" *)  _006_[9];
  assign _005_[5] = _006_[10] |(* src = "counter_load16.v:22" *)  _006_[11];
  assign _005_[6] = _006_[12] |(* src = "counter_load16.v:22" *)  _006_[13];
  assign _005_[7] = _006_[14] |(* src = "counter_load16.v:22" *)  _006_[15];
  assign _003_[0] = _005_[0] |(* src = "counter_load16.v:22" *)  _005_[1];
  assign _003_[1] = _005_[2] |(* src = "counter_load16.v:22" *)  _005_[3];
  assign _003_[2] = _005_[4] |(* src = "counter_load16.v:22" *)  _005_[5];
  assign _003_[3] = _005_[6] |(* src = "counter_load16.v:22" *)  _005_[7];
  assign _004_[0] = _003_[0] |(* src = "counter_load16.v:22" *)  _003_[1];
  assign _004_[1] = _003_[2] |(* src = "counter_load16.v:22" *)  _003_[3];
  assign out = _004_[0] |(* src = "counter_load16.v:22" *)  _004_[1];
  assign _005_[0] = _006_[0] |(* src = "counter_load16.v:22" *)  _006_[1];
  assign _005_[1] = _006_[2] |(* src = "counter_load16.v:22" *)  _006_[3];
  assign _007_[0] = en ? (* src = "counter_load16.v:12" *) _001_[0] : count[15];
  assign _007_[1] = en ? (* src = "counter_load16.v:12" *) _001_[1] : count[15];
  assign _007_[2] = en ? (* src = "counter_load16.v:12" *) _001_[2] : count[15];
  assign _007_[3] = en ? (* src = "counter_load16.v:12" *) _001_[3] : count[15];
  assign _007_[4] = en ? (* src = "counter_load16.v:12" *) _001_[4] : count[15];
  assign _007_[5] = en ? (* src = "counter_load16.v:12" *) _001_[5] : count[15];
  assign _007_[6] = en ? (* src = "counter_load16.v:12" *) _001_[6] : count[15];
  assign _007_[7] = en ? (* src = "counter_load16.v:12" *) _001_[7] : count[15];
  assign _007_[8] = en ? (* src = "counter_load16.v:12" *) _001_[8] : count[15];
  assign _007_[9] = en ? (* src = "counter_load16.v:12" *) _001_[9] : count[15];
  assign _007_[10] = en ? (* src = "counter_load16.v:12" *) _001_[10] : count[15];
  assign _007_[11] = en ? (* src = "counter_load16.v:12" *) _001_[11] : count[15];
  assign _007_[12] = en ? (* src = "counter_load16.v:12" *) _001_[12] : count[15];
  assign _007_[13] = en ? (* src = "counter_load16.v:12" *) _001_[13] : count[15];
  assign _007_[14] = en ? (* src = "counter_load16.v:12" *) _001_[14] : count[15];
  assign _007_[15] = en ? (* src = "counter_load16.v:12" *) _001_[15] : count[15];
  assign _000_[0] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[0];
  assign _000_[1] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[1];
  assign _000_[2] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[2];
  assign _000_[3] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[3];
  assign _000_[4] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[4];
  assign _000_[5] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[5];
  assign _000_[6] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[6];
  assign _000_[7] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[7];
  assign _000_[8] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[8];
  assign _000_[9] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[9];
  assign _000_[10] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[10];
  assign _000_[11] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[11];
  assign _000_[12] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[12];
  assign _000_[13] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[13];
  assign _000_[14] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[14];
  assign _000_[15] = rst ? (* src = "counter_load16.v:10" *) 1'b0 : _007_[15];
  assign _002_ = ~out;
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[0] <= data[0];
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[1] <= data[1];
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[2] <= data[2];
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[3] <= data[3];
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[4] <= data[4];
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[5] <= data[5];
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[6] <= data[6];
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[7] <= data[7];
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[8] <= data[8];
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[9] <= data[9];
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[10] <= data[10];
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[11] <= data[11];
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[12] <= data[12];
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[13] <= data[13];
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[14] <= data[14];
  (* src = "counter_load16.v:19" *)
  always @(posedge load)
      mem[15] <= data[15];
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[0];
  assign count[15] = \count_reg[15] ;
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[1];
  assign count[15] = \count_reg[15] ;
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[2];
  assign count[15] = \count_reg[15] ;
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[3];
  assign count[15] = \count_reg[15] ;
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[4];
  assign count[15] = \count_reg[15] ;
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[5];
  assign count[15] = \count_reg[15] ;
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[6];
  assign count[15] = \count_reg[15] ;
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[7];
  assign count[15] = \count_reg[15] ;
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[8];
  assign count[15] = \count_reg[15] ;
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[9];
  assign count[15] = \count_reg[15] ;
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[10];
  assign count[15] = \count_reg[15] ;
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[11];
  assign count[15] = \count_reg[15] ;
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[12];
  assign count[15] = \count_reg[15] ;
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[13];
  assign count[15] = \count_reg[15] ;
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[14];
  assign count[15] = \count_reg[15] ;
  reg \count_reg[15] ;
  (* src = "counter_load16.v:9" *)
  always @(posedge clk)
      \count_reg[15]  <= _000_[15];
  assign count[15] = \count_reg[15] ;
  \$_DLATCH_P_  _089_ (
    .D(1'b0),
    .E(_002_),
    .Q(count[15])
  );
  assign _001_[0] = count[15] ^(* src = "<techmap.v>:262" *)  1'b1;
  assign _001_[1] = count[15] ^(* src = "<techmap.v>:263" *)  count[15];
  assign _001_[2] = count[15] ^(* src = "<techmap.v>:263" *)  _008_[1];
  assign _001_[3] = count[15] ^(* src = "<techmap.v>:263" *)  _008_[2];
  assign _001_[4] = count[15] ^(* src = "<techmap.v>:263" *)  _008_[3];
  assign _001_[5] = count[15] ^(* src = "<techmap.v>:263" *)  _008_[4];
  assign _001_[6] = count[15] ^(* src = "<techmap.v>:263" *)  _008_[5];
  assign _001_[7] = count[15] ^(* src = "<techmap.v>:263" *)  _008_[6];
  assign _001_[8] = count[15] ^(* src = "<techmap.v>:263" *)  _008_[7];
  assign _001_[9] = count[15] ^(* src = "<techmap.v>:263" *)  _008_[8];
  assign _001_[10] = count[15] ^(* src = "<techmap.v>:263" *)  _008_[9];
  assign _001_[11] = count[15] ^(* src = "<techmap.v>:263" *)  _008_[10];
  assign _001_[12] = count[15] ^(* src = "<techmap.v>:263" *)  _008_[11];
  assign _001_[13] = count[15] ^(* src = "<techmap.v>:263" *)  _008_[12];
  assign _001_[14] = count[15] ^(* src = "<techmap.v>:263" *)  _008_[13];
  assign _001_[15] = count[15] ^(* src = "<techmap.v>:263" *)  _008_[14];
  assign _008_[3] = _008_[1] &(* src = "<techmap.v>:260|<techmap.v>:221" *)  _008_[1];
  assign _008_[1] = count[15] &(* src = "<techmap.v>:260|<techmap.v>:222" *)  count[15];
  assign _008_[7] = _008_[3] &(* src = "<techmap.v>:260|<techmap.v>:222" *)  _008_[3];
  assign _008_[11] = _008_[3] &(* src = "<techmap.v>:260|<techmap.v>:229" *)  _008_[7];
  assign _008_[5] = _008_[1] &(* src = "<techmap.v>:260|<techmap.v>:229" *)  _008_[3];
  assign _008_[9] = _008_[1] &(* src = "<techmap.v>:260|<techmap.v>:229" *)  _008_[7];
  assign _008_[13] = _008_[1] &(* src = "<techmap.v>:260|<techmap.v>:229" *)  _008_[11];
  assign _008_[2] = count[15] &(* src = "<techmap.v>:260|<techmap.v>:229" *)  _008_[1];
  assign _008_[4] = count[15] &(* src = "<techmap.v>:260|<techmap.v>:229" *)  _008_[3];
  assign _008_[6] = count[15] &(* src = "<techmap.v>:260|<techmap.v>:229" *)  _008_[5];
  assign _008_[8] = count[15] &(* src = "<techmap.v>:260|<techmap.v>:229" *)  _008_[7];
  assign _008_[10] = count[15] &(* src = "<techmap.v>:260|<techmap.v>:229" *)  _008_[9];
  assign _008_[12] = count[15] &(* src = "<techmap.v>:260|<techmap.v>:229" *)  _008_[11];
  assign _008_[14] = count[15] &(* src = "<techmap.v>:260|<techmap.v>:229" *)  _008_[13];
  assign _006_[0] = count[15] ^(* src = "counter_load16.v:22" *)  mem[0];
  assign _006_[1] = count[15] ^(* src = "counter_load16.v:22" *)  mem[1];
  assign _006_[2] = count[15] ^(* src = "counter_load16.v:22" *)  mem[2];
  assign _006_[3] = count[15] ^(* src = "counter_load16.v:22" *)  mem[3];
  assign _006_[4] = count[15] ^(* src = "counter_load16.v:22" *)  mem[4];
  assign _006_[5] = count[15] ^(* src = "counter_load16.v:22" *)  mem[5];
  assign _006_[6] = count[15] ^(* src = "counter_load16.v:22" *)  mem[6];
  assign _006_[7] = count[15] ^(* src = "counter_load16.v:22" *)  mem[7];
  assign _006_[8] = count[15] ^(* src = "counter_load16.v:22" *)  mem[8];
  assign _006_[9] = count[15] ^(* src = "counter_load16.v:22" *)  mem[9];
  assign _006_[10] = count[15] ^(* src = "counter_load16.v:22" *)  mem[10];
  assign _006_[11] = count[15] ^(* src = "counter_load16.v:22" *)  mem[11];
  assign _006_[12] = count[15] ^(* src = "counter_load16.v:22" *)  mem[12];
  assign _006_[13] = count[15] ^(* src = "counter_load16.v:22" *)  mem[13];
  assign _006_[14] = count[15] ^(* src = "counter_load16.v:22" *)  mem[14];
  assign _006_[15] = count[15] ^(* src = "counter_load16.v:22" *)  mem[15];
  assign count[14:0] = { count[15], count[15], count[15], count[15], count[15], count[15], count[15], count[15], count[15], count[15], count[15], count[15], count[15], count[15], count[15] };
endmodule
